[gd_scene load_steps=8 format=2]

[ext_resource path="res://src/combat/animation/BattlerAnim.tscn" type="PackedScene" id=1]
[ext_resource path="res://assets/sprites/battlers/shadow.png" type="Texture" id=2]
[ext_resource path="res://assets/sprites/battlers/Leaf Cutter Ant.png" type="Texture" id=3]
[ext_resource path="res://src/ActionCommand/471156__worldmaxter__chair-smack.wav" type="AudioStream" id=8]

[sub_resource type="Animation" id=2]
resource_name = "Failure"
length = 1.2
tracks/0/type = "value"
tracks/0/path = NodePath("body:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6, 1.2 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 90.0, 90.0, 0.0, 0.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6, 0.8, 1.2 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 109.407, 0 ), Vector2( 109.407, 0 ), Vector2( 0, 0 ), Vector2( 0, 0 ), Vector2( 0, 0 ) ]
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("body:position:y")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( -237.948, 0, 0, 0.25, 0, -25.061, 0, 0, 0.25, 0, -25.061, 0, 0, 0.25, 0, -100, -0.25, 0, 0.25, 0, -100, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.2, 0.4, 0.6, 1.2 )
}
tracks/3/type = "method"
tracks/3/path = NodePath("AttackPlayer")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 1.2 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "end_attack"
} ]
}

[sub_resource type="Animation" id=1]
resource_name = "Jump"
length = 1.5
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("AttackPlayer:segment")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.7 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 0, 1 ]
}
tracks/1/type = "method"
tracks/1/path = NodePath("AttackPlayer")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.55 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "start_input_listen"
} ]
}
tracks/2/type = "method"
tracks/2/path = NodePath("AttackPlayer")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0.65 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "end_input_listen"
} ]
}
tracks/3/type = "method"
tracks/3/path = NodePath("AttackPlayer")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0.7 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "damage"
} ]
}
tracks/4/type = "method"
tracks/4/path = NodePath("AttackPlayer")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 1.5 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "end_attack"
} ]
}
tracks/5/type = "audio"
tracks/5/path = NodePath("AudioStreamPlayer")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"clips": [ {
"end_offset": 0.0,
"start_offset": 0.06,
"stream": ExtResource( 8 )
} ],
"times": PoolRealArray( 0.7 )
}
tracks/6/type = "value"
tracks/6/path = NodePath(".:position")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0, 0.6, 0.65, 1.2 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 553.959, 0 ), Vector2( 553.959, 0 ), Vector2( 0, 0 ) ]
}
tracks/7/type = "bezier"
tracks/7/path = NodePath("body:position:y")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"points": PoolRealArray( -98.7847, 0, 0, 0, 0, -261.516, -0.25, 0, 0.25, 0, -101.273, 0, 0, 0, 0, -101.273, 0, 0, 0, 0, -261.516, -0.25, 0, 0.25, 0, -100, 0, 0, 0, 0 ),
"times": PoolRealArray( 0, 0.3, 0.6, 0.65, 0.9, 1.2 )
}

[sub_resource type="GDScript" id=4]
script/source = "extends AnimationPlayer

export (int) var segment:int = 0
var attacker:Battler
var target:Battler
signal input_received
signal attack_ended


func _input(event):
	if event.is_action_pressed(\"ui_accept\"):
		emit_signal(\"input_received\")

func skip_to_next(arg):
	assert(current_animation != null)
	
	var idx = get_animation(current_animation).find_track(\"AttackPlayer:segment\")
	var target = clamp(segment + 1, 0, get_animation(current_animation).track_get_key_count(idx))
	var target_time = get_animation(current_animation).track_get_key_time(idx, segment + 1)
	
	seek(target_time)
	print(\"success\")

func start_input_listen():
	connect(\"input_received\", self, \"skip_to_next\", [CONNECT_ONESHOT])
	
func end_input_listen():
	disconnect(\"input_received\", self, \"skip_to_next\")
	failure()

func failure():
	#set up animation track to blend
	var anim = get_animation(\"Failure\")
	var position = get_parent().position
	
	var track_position_diff = anim.track_get_key_value(anim.find_track(\".:position\"), 1) - anim.track_get_key_value(anim.find_track(\".:position\"), 0)
	var body_rotation = get_parent().get_node(\"body\").rotation_degrees
	var body_position = get_parent().get_node(\"body\").position
	anim.track_set_key_value(anim.find_track(\"body:position:y\"), 0, body_position.y)
	anim.track_set_key_value(anim.find_track(\"body:rotation_degrees\"), 0, body_rotation)	
	
	anim.track_set_key_value(anim.find_track(\".:position\"), 0, position)
	anim.track_set_key_value(anim.find_track(\".:position\"), 1, position + track_position_diff)
	anim.track_set_key_value(anim.find_track(\".:position\"), 2, position + track_position_diff)
	anim.track_set_key_value(anim.find_track(\".:position\"), 3, position)
	anim.track_set_key_value(anim.find_track(\".:position\"), 4, position)
	
	play(\"Failure\")
	
func damage():
	assert(target)
	assert(attacker)
	var hit = Hit.new(attacker.stats.strength)
	target.take_damage(hit)

func end_attack():
	emit_signal(\"attack_ended\")
"

[node name="GodetteAnim" instance=ExtResource( 1 )]

[node name="shadow" type="Sprite" parent="." index="0"]
position = Vector2( -0.160036, -0.0731697 )
scale = Vector2( 0.762084, 1.14634 )
texture = ExtResource( 2 )

[node name="body" type="Sprite" parent="." index="1"]
position = Vector2( 26.8854, -100 )
scale = Vector2( 0.573434, 0.573434 )
texture = ExtResource( 3 )

[node name="RectExtents" parent="." index="3"]
position = Vector2( 3.11111, -108.444 )
size = Vector2( 165.333, 223.556 )

[node name="AttackPlayer" type="AnimationPlayer" parent="." index="4"]
anims/Failure = SubResource( 2 )
anims/Jump = SubResource( 1 )
script = SubResource( 4 )
segment = 1

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="." index="5"]
stream = ExtResource( 8 )
