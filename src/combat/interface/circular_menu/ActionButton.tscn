[gd_scene load_steps=10 format=2]

[sub_resource type="StyleBoxEmpty" id=1]

[sub_resource type="StyleBoxEmpty" id=2]

[sub_resource type="StyleBoxEmpty" id=3]

[sub_resource type="StyleBoxEmpty" id=4]

[sub_resource type="StyleBoxEmpty" id=5]

[sub_resource type="GDScript" id=6]
script/source = "# Animated circular button that supports both keys and mouse input
# Reacts to mouse hover and focus events
extends Button

onready var animation_player := $AnimationPlayer as AnimationPlayer
onready var tooltip := $Tooltip as Control
onready var button_icon := $Background/Icon as TextureRect

var mouse_over: bool
var active: bool
var target_position: Vector2
var unfocused_scale: Vector2


func initialize(action: CombatAction, target_position: Vector2) -> void:
	# Places the Button on the screen, where the appear tween animation should end
	# Disables the button if the action isn't usable, for example
	# if the battler doesn't have enough mana
	unfocused_scale = rect_scale
	rect_scale = Vector2()
	self.target_position = target_position

	button_icon.texture = action.icon
	disabled = not action.can_use()
	if disabled:
		modulate = Color(\"#555555\")
	tooltip.initialize(self, action)

	connect('mouse_entered', self, 'enter_focus')
	connect('mouse_exited', self, 'exit_focus')
	connect('focus_entered', self, 'enter_focus')
	connect('focus_exited', self, 'exit_focus')


func enter_focus():
	raise()
	tooltip.show()
	animation_player.play('activate')
	yield(animation_player, \"animation_finished\")
	animation_player.play('active')


func exit_focus():
	tooltip.hide()
	animation_player.play('deactivate')
"

[sub_resource type="Animation" id=7]
length = 0.2
tracks/0/type = "value"
tracks/0/path = NodePath(".:rect_scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 0.517631, 1 ),
"update": 0,
"values": [ Vector2( 0.75, 0.75 ), Vector2( 1, 1 ) ]
}

[sub_resource type="Animation" id=8]
loop = true

[sub_resource type="Animation" id=9]
length = 0.2
tracks/0/type = "value"
tracks/0/path = NodePath(".:rect_scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 0.353553, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 0.75, 0.75 ) ]
}

[node name="CircularButton" type="Button"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -72.0
margin_top = -72.0
margin_right = 72.0
margin_bottom = 72.0
rect_pivot_offset = Vector2( 72, 72 )
mouse_filter = 1
custom_styles/hover = SubResource( 1 )
custom_styles/pressed = SubResource( 2 )
custom_styles/focus = SubResource( 3 )
custom_styles/disabled = SubResource( 4 )
custom_styles/normal = SubResource( 5 )
flat = true
script = SubResource( 6 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/activate = SubResource( 7 )
anims/active = SubResource( 8 )
anims/deactivate = SubResource( 9 )
